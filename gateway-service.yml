management:
  endpoint:
    beans:
      enabled: false
  endpoints:
    web:
      exposure:
        include: "*"
spring:
  servlet:
    multipart:
      enabled: true
      max-file-size: 1024MB
      max-request-size: 1064MB
  cloud:
    consul:
      discovery:
        register-health-check: false
        hostname: localhost
    stream:
      bindings:
        new-utilisateur:
          destination: messages
          group: utilisateur.new
          binder: rabbit
        register-utilisateur:
          destination: messages
          group: utilisateur.register
          binder: rabbit
        delete-utilisateur:
          destination: messages
          group: utilisateur.delete
          binder: rabbit
        update-utilisateur:
          destination: messages
          group: utilisateur.update
          binder: rabbit
        episode-utilisateur:
          destination: messages
          group: utilisateur.episode
          binder: rabbit
        patch-utilisateur:
          destination: messages
          group: utilisateur.patch
          binder: rabbit
        new-cours:
          destination: messages
          group: cours.new
          binder: rabbit
        update-cours:
          destination: messages
          group: cours.update
          binder: rabbit
        patch-cours:
          destination: messages
          group: cours.patch
          binder: rabbit
        delete-cours:
          destination: messages
          group: cours.delete
          binder: rabbit
        new-episode:
          destination: messages
          group: episode.new
          binder: rabbit
        update-episode:
          destination: messages
          group: episode.update
          binder: rabbit
        patch-episode:
          destination: messages
          group: episode.patch
          binder: rabbit
        delete-episode:
          destination: messages
          group: episode.delete
          binder: rabbit
      rabbit:
        bindings:
          new-utilisateur:
            producer:
              requiredGroups: ${spring.cloud.stream.bindings.new-utilisateur.group}
              routing-key-expression: "'messages.utilisateur.new'"
              bindingRoutingKey: messages.utilisateur.new
          register-utilisateur:
            producer:
              requiredGroups: ${spring.cloud.stream.bindings.register-utilisateur.group}
              routing-key-expression: "'messages.utilisateur.register'"
              bindingRoutingKey: messages.utilisateur.register
          delete-utilisateur:
            producer:
              requiredGroups: ${spring.cloud.stream.bindings.delete-utilisateur.group}
              routing-key-expression: "'messages.utilisateur.delete'"
              bindingRoutingKey: messages.utilisateur.delete
          update-utilisateur:
            producer:
              requiredGroups: ${spring.cloud.stream.bindings.update-utilisateur.group}
              routing-key-expression: "'messages.utilisateur.update'"
              bindingRoutingKey: messages.utilisateur.update
          episode-utilisateur:
            producer:
              requiredGroups: ${spring.cloud.stream.bindings.episode-utilisateur.group}
              routing-key-expression: "'messages.utilisateur.episode'"
              bindingRoutingKey: messages.utilisateur.episode
          patch-utilisateur:
            producer:
              requiredGroups: ${spring.cloud.stream.bindings.patch-utilisateur.group}
              routing-key-expression: "'messages.utilisateur.patch'"
              bindingRoutingKey: messages.utilisateur.patch
          new-cours:
            producer:
              requiredGroups: ${spring.cloud.stream.bindings.new-cours.group}
              routing-key-expression: "'messages.cours.new'"
              bindingRoutingKey: messages.cours.new
          update-cours:
            producer:
              requiredGroups: ${spring.cloud.stream.bindings.update-cours.group}
              routing-key-expression: "'messages.cours.update'"
              bindingRoutingKey: messages.cours.update
          patch-cours:
            producer:
              requiredGroups: ${spring.cloud.stream.bindings.patch-cours.group}
              routing-key-expression: "'messages.cours.patch'"
              bindingRoutingKey: messages.cours.patch
          delete-cours:
            producer:
              requiredGroups: ${spring.cloud.stream.bindings.delete-cours.group}
              routing-key-expression: "'messages.cours.delete'"
              bindingRoutingKey: messages.cours.delete
          new-episode:
            producer:
              requiredGroups: ${spring.cloud.stream.bindings.new-episode.group}
              routing-key-expression: "'messages.episode.new'"
              bindingRoutingKey: messages.episode.new
          update-episode:
            producer:
              requiredGroups: ${spring.cloud.stream.bindings.update-episode.group}
              routing-key-expression: "'messages.episode.update'"
              bindingRoutingKey: messages.episode.update
          patch-episode:
            producer:
              requiredGroups: ${spring.cloud.stream.bindings.patch-episode.group}
              routing-key-expression: "'messages.episode.patch'"
              bindingRoutingKey: messages.episode.patch
          delete-episode:
            producer:
              requiredGroups: ${spring.cloud.stream.bindings.delete-episode.group}
              routing-key-expression: "'messages.episode.delete'"
              bindingRoutingKey: messages.episode.delete
---
spring:
  profiles: docker
  cloud:
    consul:
      host: consul
      discovery:
        hostname: gateway-service
  rabbitmq:
    host: rabbitmq
